<script type="text/ng-template" id="promethee/components/table/edit/inspect">
  <div ng-controller="TableInspectController">
    <div class="form-group">
      <h3>Columns</h3>
      <div class="btn btn-default btn-light btn-sm" ng-click="addColumn()">
        Add column
      </div>

      <div  ui-sortable="sortableColumnsOptions"
            ng-model="promethee.inspected.attributes.structure.value[0]">
        <div ng-if="getHeaderCellUids().length > 1" ng-repeat="cellUid in getHeaderCellUids()">
          <div class="row align-items-center">
            <div class="col-1" style="line-height: 38px">
              <i class="fas fa-bars"></i>
            </div>
            <div class="col-9">
              {{ promethee.inspected.attributes.data.value[cellUid].value }}
            </div>
            <div class="col-2">
              <a  class="btn btn-default btn-light btn-sm"
                  ng-click="removeColumn($index)">
                <%= icon('fa', 'close') %>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="form-group">
      <h3>Rows</h3>
      <div class="btn btn-default btn-light btn-sm" ng-click="addRow(true)">
        Add row
      </div>

      <div class="mb-2" ng-repeat="row in promethee.inspected.attributes.structure.value">
        <b>Row {{$index}}</b>
        <span class="small">
          <a  class="btn btn-default btn-light btn-sm float-right"
              ng-click="removeRow($index)">
            <%= icon('fa', 'close') %>
          </a>
        </span><br/>
        <div ng-repeat="cellUid in row">
          <span class="small">
            {{ promethee.inspected.attributes.data.value[getHeaderCellUids()[$index]].value }}
          </span>
          <br/>
          <input  type="text"
                  ng-model="promethee.inspected.attributes.data.value[cellUid].value"
                  class="form-control" />
        </div>
      </div>
      <hr>
      <div ng-show="promethee.inspected.attributes.structure.value.length > 1">
        <label class="label-control">Drag the rows below to reorder them:</label>
        <ul ui-sortable
            ng-model="promethee.inspected.attributes.structure.value"
            class="list-unstyled">
          <li ng-repeat="_ in promethee.inspected.attributes.structure.value track by $index">
            <%= icon('fa', 'bars') %> Row {{$index}}
          </li>
        </ul>
      </div>
    </div>
  </div>
</script>

<script>
  promethee.controller('TableInspectController', ['$scope', 'uidService', function($scope, uidService) {
    $scope.sortableColumnsOptions = {
      update: function (e, ui) {
          var originalIndex = ui.item.sortable.index,
              newIndex = ui.item.sortable.dropindex;

          ui.item.sortable.cancel();
          this.sortColumns(originalIndex, newIndex);
      }.bind($scope)
    };

    $scope.getHeaderCellUids = function () {
      if (this.promethee.inspected.attributes.structure.value.length === 0) {
        return [];
      }

      return this.promethee.inspected.attributes.structure.value[0];
    }

    $scope.sortColumns = function (oldIndex, newIndex) {
      var i;
      for (i = 0; i < this.promethee.inspected.attributes.structure.value.length; i += 1) {
        var uid = this.promethee.inspected.attributes.structure.value[i][oldIndex]

        this.promethee.inspected.attributes.structure.value[i].splice(oldIndex, 1);
        this.promethee.inspected.attributes.structure.value[i].splice(newIndex, 0, uid);
      }
    };

    $scope.getColumnsCount = function () {
      return $scope.getRowsCount() === 0 ? 0 : this.promethee.inspected.attributes.structure.value[0].length;
    };

    $scope.getRowsCount = function () {
      return this.promethee.inspected.attributes.structure.value.length;
    };

    $scope.removeRow = function (index) {
      var uids = this.promethee.inspected.attributes.structure.value[index],
          i;

      this.promethee.inspected.attributes.structure.value.splice(index, 1);
      $scope.removeData(uids);
    }

    $scope.removeColumn = function (index) {
      var uids = [],
          i;

      for (i = 0; i < this.promethee.inspected.attributes.structure.value.length; i += 1) {
        uids.push(this.promethee.inspected.attributes.structure.value[i][index]);
        this.promethee.inspected.attributes.structure.value[i].splice(index, 1);
      }

      $scope.removeData(uids);
    }

    $scope.removeData = function (uids) {
      var i;
      for (i = 0; i < uids.length; i += 1) {
        delete this.promethee.inspected.attributes.data.value[uids[i]];
      }
    }

    $scope.addColumn = function () {
      var i;

      if ($scope.getRowsCount() === 0) {
        $scope.addRow(false);
      }

      for (i = 0; i < this.promethee.inspected.attributes.structure.value.length; i += 1) {
        var uid = uidService.generate();
        this.promethee.inspected.attributes.structure.value[i].push(uid);
        $scope.initDataForUid(uid);
      }
    };

    $scope.addRow = function (forceColumn) {
      var rowsCount = $scope.getRowsCount(),
          columnsCount = $scope.getColumnsCount(),
          newRow = [],
          uid,
          i;

      for (i = 0; i < columnsCount; i += 1) {
          uid = uidService.generate();
          newRow.push(uid);
          $scope.initDataForUid(uid);
      }

      this.promethee.inspected.attributes.structure.value.push(newRow);

      if (columnsCount === 0 && forceColumn) {
        $scope.addColumn();
      }
    };

    $scope.initDataForUid = function (uid) {
      this.promethee.inspected.attributes.data.value[uid] = {
        type: 'string',
        searchable: true,
        value: ''
      }
    }
  }]);
</script>
