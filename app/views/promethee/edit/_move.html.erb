<script type="text/javascript">
promethee
  .directive('addable', function() {
    return {
      restrict:'A',
      link: function(scope, element, attrs) {
        element.draggable({
          revert: true,
          revertDuration: 0,
          scroll: true,
          refreshPositions: true,
          cursor: 'move', 
          cursorAt: { top: 0, left: 0 },
          helper: 'clone',
          appendTo: '.promethee-edit__move',
          start: function(event, ui) {
            var type = $(element[0]).data('type');
            $('.promethee-edit__move').addClass('promethee-edit__move--dragging promethee-edit__move--dragging--' + type);
          },
          stop: function(event, ui) {
            var type = $(element[0]).data('type');
            $('.promethee-edit__move').removeClass('promethee-edit__move--dragging promethee-edit__move--dragging--' + type);
          }
        });
      }
    }
  })
  .directive('draggable', function() {
    return {
      restrict:'A',
      link: function(scope, element, attrs) {
        element.draggable({
          revert: true,
          revertDuration: 0,
          scroll: true,
          refreshPositions: true,
          cursor: 'move', 
          start: function() {
            var $elementDragged = $(element[0]);
            var type = $elementDragged.data('type');
            $('.promethee-edit__move').addClass('promethee-edit__move--dragging promethee-edit__move--dragging--' + type);
            var listId = $elementDragged.data('list-id');
            var listIndex = $elementDragged.data('list-index');
            $('.promethee-edit__move__droppable[data-id="' + listId + '"][data-index="' + listIndex + '"]').hide();
          },
          stop: function() {
            var $elementDragged = $(element[0]);
            var type = $elementDragged.data('type');
            $('.promethee-edit__move').removeClass('promethee-edit__move--dragging promethee-edit__move--dragging--' + type);
            var listId = $elementDragged.data('list-id');
            var listIndex = $elementDragged.data('list-index');
            $('.promethee-edit__move__droppable[data-id="' + listId + '"][data-index="' + listIndex + '"]').show();
          }
        });
      }
    }
  })
  .directive('droppable', function($compile) {
    return {
      restrict: 'A',
      link: function(scope, element, attrs) {
        element.droppable({
          tolerance: 'pointer',
          drop: function(event, ui) {
            var draggedFromLibrary = false;
            var draggedFromList = angular.element(ui.draggable).parent().scope().components;
            var droppedToList = angular.element(this).scope().components;
            var droppedToIndex = parseInt(this.getAttribute('data-index'));
            if (draggedFromList === undefined) {
              draggedFromLibrary = true;
            }
            if (draggedFromLibrary) {
              var definition = angular.element(ui.draggable).scope().definition;
              var component = angular.copy(definition.data);
              // FIXME dirty
              function guid() {
                function s4() {
                  return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
                }
                return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
              }
              component.id = guid();
            } else {
              var draggedFromIndex = parseInt(ui.draggable[0].getAttribute('data-list-index'));
              // console.log('dragged', draggedFromList, draggedFromIndex);
              draggedFromList.splice(draggedFromIndex, 1);

              var component = angular.element(ui.draggable).scope().component;
              if (draggedFromList == droppedToList) {
                // The object we dragged was removed from the list
                if (draggedFromIndex < droppedToIndex) {
                  // It was before the dropped index, so removing it changed the index
                  droppedToIndex -= 1;
                }
              }
            }
            // console.log('dropped', component, droppedToList, droppedToIndex);
            droppedToList.splice(droppedToIndex, 0, component);

            scope.$apply();
          }
        });
      }
    }
  });

promethee.controller('AdderController', 
  ['$scope', '$rootScope', 'definitions', 'identifier', 
  function($scope, $rootScope, definitions, identifier) {

  $scope.adding = false;
  $scope.childrenToAddTo = null;
  $scope.definitions = definitions;

  $scope.close = function() {
    $scope.adding = false;
    $scope.addingToChildren = null;
  };

  $scope.pushComponent = function(definition) {
    var definition = angular.copy(definition.data);
    definition.id = identifier.generate();
    $scope.childrenToAddTo.push(definition);
    $scope.close();
  };

  $rootScope.addComponentTo = function(components) {
    $scope.adding = true;
    $scope.childrenToAddTo = components;
  };

}])
</script>

<div class="promethee-edit__move" ng-show="promethee.mode == 'move'">
  <div class="promethee-edit__library">
    <div class="promethee-edit__library-header">Library</div>
    <div class="promethee-edit__library-content">
      <div class="row">
        <div  ng-repeat="definition in promethee.definitions"
              class="col-md-12 col-lg-6">
          <div  addable 
                class="promethee-edit__library__item" 
                data-type="{{definition.data.type}}">
            <div class="promethee-edit__library__item__icon" ng-bind-html="definition.icon | htmlSafe"></div>
            <div class="promethee-edit__library__item__name">{{definition.name}}</div>
          </div>
        </div>
      </div>
    </div>
    <div class="promethee-edit__library-header">Presets</div>
    <div class="promethee-edit__library-content">
    </div>
  </div>

  <div class="promethee-edit__move__columns">
    <div class="row">
      <% 12.times do %>
        <div class="col col-md-1"><div class="color"></div></div>
      <% end %>
    </div>
  </div>

  <div class="promethee-edit__move__page">
    <ng-include src="'promethee/move/components'"></ng-include>
  </div>

  <div class="promethee-edit__inspect" ng-show="promethee.inspected">
    <div class="promethee-edit__inspect-header">
      <div class="pull-right">
        <span ng-click="promethee.inspected = null"><%= fa_icon 'minus-square' %></span>
      </div>
      {{promethee.inspected.type}}
    </div>
    <div class="promethee-edit__inspect-content">
      <ng-include ng-if="promethee.inspected" 
                  src="'promethee/components/' + promethee.inspected.type + '/edit/inspect'"></ng-include>
    </div>
  </div>
</div>

<script type="text/ng-template" id="promethee/move/component">
  <div class="promethee-edit__move__component">
    <ng-include src="'promethee/components/' + component.type + '/edit/move'"></ng-include>
  </div>
</script>

<script type="text/ng-template" id="promethee/move/components">
  <div ng-init="parent_id = component.id; parent_type = component.type; components = component.children">
    <div 
      droppable
      class="<%= promethee_bem_classes 'promethee-edit__move__droppable', '--{{parent_type}}', '--first' %>"
      data-id="{{parent_id}}"
      data-type="{{parent_type}}"
      data-index="0"
      >
    </div>
    <div
      draggable
      ng-repeat="component in components"
      class="<%= promethee_bem_classes 'promethee-edit__move__draggable', '--{{component.type}}' %>"
      data-id="{{component.id}}"
      data-type="{{component.type}}"
      data-list-id="{{parent_id}}"
      data-list-type="{{parent_type}}"
      data-list-index="{{$index}}"
      >
      <ng-include src="'promethee/move/component'"></ng-include>
      <div
        droppable
        class="<%= promethee_bem_classes 'promethee-edit__move__droppable', '--{{parent_type}}' %>"
        data-id="{{parent_id}}"
        data-type="{{parent_type}}"
        data-index="{{$index+1}}"
        >
      </div>
    </div>
  </div>
</script>
