<%
promethee_data = Promethee::Data.new master_data
%>

<script type="text/javascript">
var promethee = angular
  .module('Promethee', ['summernote', 'ngAnimate'])
  .value('definitions', [])
  .filter('htmlSafe', ['$sce', function($sce) {
    return function(val) {
      return $sce.trustAsHtml(val);
    };
  }])
  .filter('urlSafe', ['$sce', function($sce) {
    return function(val) {
      return $sce.trustAsResourceUrl(val);
    };
  }])
  .filter('humanize', function() {
    return function(val) {
      val = (val + '').replace(/_/g, ' ').replace(/([A-Z])/g, ' $1').replace(/\s\s+/, ' ').trim();
      return val[0].toUpperCase() + val.substring(1).toLowerCase();
    };
  })
  .filter('textContentFromHTML', function() {
    return function(val, distinctParagraphs) {
      var element = document.createElement('div');
      element.innerHTML = val;

      if(distinctParagraphs === 'distinctParagraphs') {
        var paragraphs = element.querySelectorAll('p');
        for(var i = 0; i < paragraphs.length; i++) paragraphs[i].textContent += ' ';
      }

      return element.textContent;
    }
  })
  .filter('numberOfCharacters', function() {
    return function(val) {
      return val.length;
    };
  })
  .filter('numberOfWords', function() {
    return function(val) {
      var words = val
        .replace(/\bhttps?:\/\/[a-z0-9\-\._]+(?:\/[^\s\n\r]+)?/gi, 'a') // A URL is one word
        .replace(/\b[a-z0-9\-\._]+@[a-z0-9\-\._]+\.[a-z0-9\-\._]+\b/gi, 'a') // An email is one word
        .replace(/[^a-z0-9\s\n\r]/gi, ' ')
        .replace(/[\s\n\r]+/g, ' ')
        .trim()
        .split(' ');

      return words[0] === '' ? 0 : words.length;
    };
  })
  // Why doesn't this method just live in the adder controller ?
  // Because the row component also need a special access to it in order to create cols with an id. So we make it global to the application.
  .provider('identifier', function() {
    this.$get = function() {
      return {
        // https://gist.github.com/gordonbrander/2230317
        generate: function() {
          // Math.random should be unique because of its seeding algorithm.
          // Convert it to base 36 (numbers + letters), and grab the first 9 characters
          // after the decimal.
          return '' + Math.random().toString(36).substr(2, 9);
        }
      };
    };
  });

promethee.controller('PrometheeController', ['$scope', function($scope) {

  // Data (TODO use Adder and probably page definition to init)
  if ($scope.data === null || $scope.data === '') {
    $scope.data = {
      id: '',
      type: 'page',
      version: 1,
      children: []
    };
  }

  $scope.promethee = {
    data: $scope.data,
    inspected: null,
    mode: 'write',
    //mode: 'move',
    preview: 'desktop',
    fullscreen: false
  };

  $scope.inspect = function(component, event) {
    if(event.target.closest('.promethee-edit__component') === event.currentTarget) {
      $scope.promethee.inspected = component;
    }
  }

  $scope.enablePreview = function() {
    if (this.promethee.mode === 'preview') return;
    this.promethee.mode = 'preview';

    var form = document.createElement('form');
    document.body.appendChild(form);
    form.method = 'POST';
    form.action = '/promethee/preview';
    form.target = 'preview';

    var input = document.createElement('input');
    input.type = 'text';
    input.value = JSON.stringify($scope.promethee.data);
    input.name = 'data';
    form.appendChild(input);
    form.submit();
    document.body.removeChild(form);
  }

  $scope.remove = function(component, components) {
    var index = components.indexOf(component);
    components.splice(index, 1);
  }

}]);
</script>

<div
  id="promethee"
  class="promethee-edit"
  ng-app="Promethee"
  ng-class="{ 'promethee-edit--fullscreen': promethee.fullscreen }"
  ng-controller="PrometheeController as prometheeController"
  ng-init="promethee.data=<%= promethee_data.to_json %>"
  >
  <input type="hidden" name="page[data]" id="page_data" value="{{promethee.data}}" />
  <nav class="navbar navbar-default promethee-edit__navbar" ng-class="{'navbar-fixed-top': promethee.fullscreen }">
    <div class="container-fluid">
      <div class="navbar-header promethee-edit__icon">
        <div class="navbar-brand"><%= File.read(__dir__ + '/../../assets/images/icon-promethee.svg').html_safe %></div>
      </div>
      <div id="navbar">
        <ul class="nav navbar-nav navbar-right">
          <li ng-click="promethee.mode = 'write'" ng-class="{active: promethee.mode == 'write'}"><a><%= fa_icon :pencil %></a></li>
          <li ng-click="promethee.mode = 'move'" ng-class="{active: promethee.mode == 'move'}"><a><%= fa_icon :arrows %></a></li>
          <li ng-click="enablePreview()" ng-class="{active: promethee.mode == 'preview'}">
            <a data-toggle="dropdown"><%= fa_icon :eye %></a>
            <ul class="dropdown-menu" ng-show="promethee.mode == 'preview'">
              <li ng-click="promethee.preview = 'desktop'" ng-class="{active: promethee.preview == 'desktop'}"><a><i class="fa fa-desktop"></i></a></li>
              <li ng-click="promethee.preview = 'tablet'" ng-class="{active: promethee.preview == 'tablet'}"><a><i class="fa fa-tablet"></i></a></li>
              <li ng-click="promethee.preview = 'mobile'" ng-class="{active: promethee.preview == 'mobile'}"><a><i class="fa fa-mobile"></i></a></li>
            </ul>
          </li>
          <li ng-click="promethee.fullscreen = !promethee.fullscreen">
            <a ng-show="promethee.fullscreen"><%= fa_icon :expand %></a>
            <a ng-hide="promethee.fullscreen"><%= fa_icon :compress %></a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <% Dir["#{__dir__}/components/*/_edit.*.html.erb"].map do |file| %>
    <% partial = file.split('app/views/').last.gsub('.html.erb', '').gsub('/_', '/') %>
    <%= render partial %>
  <% end %>
  <%= render 'promethee/edit/write' %>
  <%= render 'promethee/edit/move' %>
  <%= render 'promethee/edit/preview' %>
</div>
